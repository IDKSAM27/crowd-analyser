*VIEW THIS IN MAXIMIZE TAB SIZE AND NOT IN MINIMIZE*
*VIEW IN THE EDITOR ITSELF IF POSSIBLE*

**MAKE SURE PYTHON 3.7 OR ABOVE IS INSTALLED IN YOUR MACHINE TO RUN THIS PROJECT**

**Clone this repository into your current working directory(cwd) of your choice.**

installation of yolov5, which would be from github repo (not to be done yet)

installation of sort.py, again from git repo (not yet) (an update, no need to clone sort repo, the file is already added to my repo) (if you're trying to make your own, then this step is applicable)

try to create a virtual environment for this proj, bcs some imports may have discord with others in other project in the local machine

(What is a VIRTUAL ENVIRONMENT?, it is isolated python environment that contains its own dependencies, Interpreter and libraries, commonly used to manage dependencies for different projects w/o causing conflicts)

lots of requirement: 
    I have used: (no need for you)
        pip freeze > requirements.txt

    all you have to do is:
        pip install -r requirements.txt (not to be done yet)

yet after this you may have to install some additional libraries of frameworks if needed, skim the output and terminal to know which one to install


(resize accordingly to see the whole table)
=================================================================================================================================================================================
|                                                                                           |                                                                                   |
|(applicable in terminal (windows and linux))                                               |                                                                                   |       
|    How to create a Virtual Environment:                                                   |	                                                                                |
|        python -m venv .venv    (this will create .venv file in cwd)                       |                                                                                   |
|                                                                                           |                                                                                   |
|    (If you wonder where to enter the above stated command, the TERMINAL in your cwd,      |                                                                                   |
|    press "ctrl + `"                                                                       |                                                                                   |
|    (depends on the IDE or editor)to open terminal in cwd, make sure you have already      |       {IF YOU'RE CREATING IT VIA NATIVE TERMINAL LIKE CMD}                        |
|    opened the head.py)                                                                    |       {POWERSHELL,ETC, USE THE COMMANDS FROM THE LEFT TABLE}                      |
|    (Same as above, all the commands should be entered in the TERMINAL)                    |                                                                                   |
|                                                                                           OR      SEARCH HOW TO ENABLE VIRTUAL ENVIRONMENT ACCORDING                          |
|    How to activate the Virtual Environment:                                               |       TO YOUR IDE OR CODE EDITOR.                                                 |
|        .venv\Scripts\activate  (windows)                                                  |                                                                                   |
|        source .venv/bin/activate   (linux/macOS)                                          |       P.S., IT IS QUITE EASY AND HASLE FREE.                                      |
|                                                                                           |                                                                                   |
|   #ONLY APPLICABLE FOR VSCODE, WHATEVER PRESENT IN {}                                     |                                                                                   |
|   { How to select the Virtual Environment in vscode:                                    } |                                                                                   |
|   {     ctrl + shift + p    (Command Prompt)                                            } |                                                                                   |
|   {     Enter "Python: Select Interpreter"                                              } |                                                                                   |
|   {     Then choose ".venv\Scripts\python" or simply the python version will be visible } |                                                                                   |
|                                                                                           |                                                                                   |
|   How to deactivate Virtual Environment: (applicable to terminal)                         |                                                                                   |
|       simply put "deactivate" in the terminal (no need to deactivate unless you're        |                                                                                   |
|       working in another virtual environment)                                             |                                                                                   |
|                                                                                           |                                                                                   |
=================================================================================================================================================================================

install the dependencies:
    pip install -r requirements.txt

    (no need to clone sort if you're cloning my repo) (only clone it if you're trying to do it on your own, i.e., copy pasting the code or making one of your own)
    {install sort:                                                                                                                                                  }
    {    git clone https://github.com/abewley/sort.git                                                                                                              }
    {    cd sort                                                                                                                                                    }
    {    pip install .                                                                                                                                              }
    {    ("pip install ." may not work, you may get an error like "Directory '.' is not installable. Neither 'setup.py' nor 'pyproject.toml' found"), then simply,  }
    {                                                                                                                                                               }            
    {    go to file manager, copy or cut the sort.txt from the sort folder (which you have cloned in you working directory)                                         }
    {    and paste outside the sort folder (where head.py exits)                                                                                                    }
    {                                                                                                                                                               }
    {    then,                                                                                                                                                      }
    {        pip install scikit-image    (no need as you've installed the dependencies from requirements.txt)                                                       }


install yolov5:
    git clone https://github.com/ultralytics/yolov5.git
    cd yolov5
    pip install -r requirements.txt
    

    (If you want to verify the installation or want to see what yolov5 can do, look at it like a small demo)

    run:
        python detect.py --source https://ultralytics.com/image/zidane.jpg

    (this will download the ex. image and detect some objects in it, the output image will be saved in "yolov5/runs/detect/exp" from your cwd)


    use this whenever you want to update zolov5:
        git pull    (in the TERMINAL, in the yolov5 folder)


Finally run the head.py and enjoy detecting people!!!

IF! ok IF there are some modules missing (I always make sure to update my requirements.txt) please pip install those modules, everything else would be... just fine!


===============================================================================================================================================================================
===============================================================================================================================================================================


You may be asking what is yolov5s.pt file (.pt indicates PyTorch file):

    The yolov5s.pt file is a pre-trained model file for YOLOv5 (You Look Only Once version5) object detection system.
    it is a PyTorch model that contains the architecture and pre-trained weights used for detecting objects in images 
    or video streams

    YOLOv5 Versions: YOLOv5 comes in different model sizes, such as:

    yolov5n.pt (nano – smallest and fastest, less accurate)
    yolov5s.pt (small – faster, good balance)
    yolov5m.pt (medium – more accurate, slower)
    yolov5l.pt (large – very accurate, slower)
    yolov5x.pt (extra-large – most accurate, slowest)

yolov5s.pt which we have used is best for real time object detection, it is lightweight hence ideal for devices with limited 
computational resources (e.g., mobile devices, laptops, Raspberry Pi)
It does not have any need for powerful GPUs. 

========================================================================================================================================================

Dynamic path finder is used to find alarm.mp3,

|------------------------------------------------------------|
|Aspect      |   (Dynamic Path)      |   (Static Path)       |
|------------------------------------------------------------|
|File Path   | Dynamically constructs| Assumes alarm.mp3 is  |
|Handling    | the path to alarm.mp3 | in the current working|
|            | using script's locatn | directory.            |
|------------------------------------------------------------|
|Flexibilty  | More flexible, works  | Less flexible, assumes|    
|            | regardless of where   | a specific working    |
|            | the script is executed| directory.            |
|------------------------------------------------------------|
|Complexity  | More complex due to   | Simpler and shorter.  |               
|            | the use of os.path    |                       |
|------------------------------------------------------------| 

Which One to Use?
    -If you want your script to work regardless of where it's run from (e.g., in an IDE, from the command line, etc.), the Dynamic Path approach 
    is more robust and portable.
    -If you are certain that alarm.mp3 will always be in the same directory as the working directory when the script is executed, the static path
    is simpler but might break if the script is executed from a different directory.

========================================================================================================================================================

Means of message/text/notification/warning over meaningful variables like overcrowding has to decided.
NOTE: THIS COULD BE IMPLEMENTED, NOT COMPULSORY THOUGH, I KNOW GOUDAR SIR WOULD "EED EN RI, SANNU HUDGURU MADTARU", BUT OPERATIONAL WISE OR PRACTICALLY
        A MODE OF MESSAGE IS QUITE USEFULL.

Tried Twilio API and Whatsapp Business API, but the APIs are not free, there is some cost connected with the no. of messages sent.

Trying to find alternate ways to implement the same.

==================================================================================================================================================================


Another update we can make, is the analysis procedure:
    Right now we use tkinter and matplotlib, Rather than using a niche library like matplotlib which provides very basic graph qualities,
    We can use 'statsmodel' for graphs and other analysis modes. Or use both for better usage of the libraries.



===================================================================================================================================================================

IoU:

The Intersection over Union (IoU) threshold is a critical parameter in object detection tasks. It determines the minimum required overlap between a predicted 
bounding box and the ground truth bounding box for the prediction to be considered a true positive. Mathematically, IoU is defined as the ratio of the area of 
intersection to the area of union between the predicted and ground truth bounding boxes.

Setting an appropriate IoU threshold is essential for balancing precision and recall in object detection models:

    Higher IoU Thresholds: Requiring a greater overlap (e.g., IoU > 0.7) means that only predictions closely matching the ground truth are counted as true positives. 
    This increases precision by reducing false positives but may decrease recall due to more false negatives. 

    Lower IoU Thresholds: Allowing a lesser overlap (e.g., IoU > 0.5) results in more predictions being considered true positives, which can increase recall by 
    capturing more actual objects but may decrease precision due to more false positives. 

Typically, an IoU threshold of 0.5 is used in many object detection benchmarks, such as the PASCAL VOC dataset. However, this threshold can be adjusted based 
on the specific requirements of the application and the desired balance between precision and recall. 

In the context of your project, the iou_threshold parameter in the SORT tracker determines how much overlap is required between predicted bounding boxes 
across frames to consider them as the same object. Adjusting this threshold can influence the tracker's performance in maintaining consistent object identities over time.

====================================================================================================================================================================

ttkbootstrap themes:
    Solar (You already mentioned it, but it’s awesome for a dark vibe!)
    Darkly (A stylish dark theme with a clean, professional finish.)
    Cyborg (Futuristic and bold, perfect for tech-oriented apps.)
    Superhero (A vibrant dark theme with a touch of personality.)
    Pulse (Modern and elegant, with a subtle neon aesthetic.)
    Flatly (Minimalist, with a clean and professional appearance.)
    Morph (Smooth gradients and a unique, contemporary style.)
    Journal (Light and classic, for apps with a sophisticated feel.)
    United (Warm and energetic, with a strong color palette.)
    Sandstone (Soft and earthy, great for user-friendly designs.)
    Lumen (Bright and vibrant, ideal for lively applications.)
    Yeti (Clean and simple, with a subtle modern touch.)

====================================================================================================================================================================

Feedback on the project, 
    Try to add face detection and history of the person detected (i.e., Where was he before?)

Last day of the report updation in the CV expo 2024

====================================================================================================================================================================

Next goal is to deploy the same project into an android application using Kotlin.

Simple yet smooth UI is what we'll be focusing on.

====================================================================================================================================================================

Config details: 
    process_interval - Processes the frame after a particualar interval.
    iou_threshold - (Sets the threshold (p.s., IoU information added above in the documentation)).
    max_age - The max age to be considered for the count.
    min_hits - Minimum hits in the frame to be considered as a count.
    alarm_threshold - The number of count above which the alarm will be activated.
    alarm_interval - Interval after which the alarm thread will be activated.
    roi_default - The default region of interest coordinates.
